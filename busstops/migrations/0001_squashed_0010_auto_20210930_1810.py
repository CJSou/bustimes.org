# Generated by Django 3.2.7 on 2021-09-30 19:52

import autoslug.fields
import busstops.models
import django.contrib.gis.db.models.fields
import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vosa', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminArea',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('atco_code', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=48)),
                ('short_name', models.CharField(blank=True, max_length=48)),
                ('country', models.CharField(blank=True, max_length=3)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_name', models.CharField(max_length=255)),
                ('from_email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('spam_score', models.PositiveIntegerField()),
                ('ip_address', models.GenericIPAddressField()),
                ('referrer', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('settings', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=48)),
                ('admin_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.adminarea')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.CharField(max_length=48, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=48)),
                ('qualifier_name', models.CharField(blank=True, max_length=48)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=True, populate_from='get_qualified_name', unique=True)),
                ('latlong', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('adjacent', models.ManyToManyField(blank=True, related_name='_locality_adjacent_+', to='busstops.Locality')),
                ('admin_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.adminarea')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.district')),
                ('parent', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.locality')),
            ],
            options={
                'ordering': ('name',),
            },
            bases=(busstops.models.SearchMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('aka', models.CharField(blank=True, max_length=100)),
                ('slug', autoslug.fields.AutoSlugField(editable=True, populate_from=str, unique=True)),
                ('vehicle_mode', models.CharField(blank=True, max_length=48)),
                ('parent', models.CharField(blank=True, max_length=48)),
                ('address', models.CharField(blank=True, max_length=128)),
                ('url', models.URLField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=128)),
                ('twitter', models.CharField(blank=True, max_length=255)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('licences', models.ManyToManyField(blank=True, to='vosa.Licence')),
            ],
            options={
                'ordering': ('name',),
            },
            bases=(busstops.models.SearchMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=48)),
                ('url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('latlong', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('parent', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.place')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.datasource')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=48)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_code', models.CharField(max_length=64, unique=True)),
                ('line_name', models.CharField(blank=True, max_length=64)),
                ('line_brand', models.CharField(blank=True, max_length=64)),
                ('description', models.CharField(blank=True, db_index=True, max_length=255)),
                ('outbound_description', models.CharField(blank=True, max_length=255)),
                ('inbound_description', models.CharField(blank=True, max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(editable=True, populate_from=str, unique=True)),
                ('mode', models.CharField(blank=True, max_length=11)),
                ('date', models.DateField()),
                ('current', models.BooleanField(db_index=True, default=True)),
                ('show_timetable', models.BooleanField(default=False)),
                ('timetable_wrong', models.BooleanField(default=False)),
                ('geometry', django.contrib.gis.db.models.fields.MultiLineStringField(editable=False, null=True, srid=4326)),
                ('tracking', models.BooleanField(default=False)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
            ],
            options={
                'ordering': ['service_code'],
            },
            bases=(busstops.models.SearchMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StopArea',
            fields=[
                ('id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=48)),
                ('stop_area_type', models.CharField(choices=[('GPBS', 'on-street pair'), ('GCLS', 'on-street cluster'), ('GAIR', 'airport building'), ('GBCS', 'bus/coach station'), ('GFTD', 'ferry terminal/dock'), ('GTMU', 'tram/metro station'), ('GRLS', 'rail station'), ('GCCH', 'coach service coverage')], max_length=4)),
                ('latlong', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('active', models.BooleanField()),
                ('admin_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.adminarea')),
                ('parent', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.stoparea')),
            ],
        ),
        migrations.CreateModel(
            name='StopPoint',
            fields=[
                ('atco_code', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('naptan_code', models.CharField(blank=True, db_index=True, max_length=16)),
                ('common_name', models.CharField(max_length=48)),
                ('landmark', models.CharField(blank=True, max_length=48)),
                ('street', models.CharField(blank=True, max_length=48)),
                ('crossing', models.CharField(blank=True, max_length=48)),
                ('indicator', models.CharField(blank=True, max_length=48)),
                ('latlong', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('suburb', models.CharField(blank=True, max_length=48)),
                ('town', models.CharField(blank=True, max_length=48)),
                ('locality_centre', models.BooleanField(null=True)),
                ('heading', models.PositiveIntegerField(blank=True, null=True)),
                ('bearing', models.CharField(blank=True, choices=[('N', 'north ↑'), ('NE', 'north-east ↗'), ('E', 'east →'), ('SE', 'south-east ↘'), ('S', 'south ↓'), ('SW', 'south-west ↙'), ('W', 'west ←'), ('NW', 'north-west ↖')], max_length=2)),
                ('stop_type', models.CharField(blank=True, choices=[('AIR', 'Airport entrance'), ('GAT', 'Air airside area'), ('FTD', 'Ferry terminal/dock entrance'), ('FER', 'Ferry/dock berth area'), ('FBT', 'Ferry berth'), ('RSE', 'Rail station entrance'), ('RLY', 'Rail platform access area'), ('RPL', 'Rail platform'), ('TMU', 'Tram/metro/underground entrance'), ('MET', 'MET'), ('PLT', 'Metro and underground platform access area'), ('BCE', 'Bus/coach station entrance'), ('BCS', 'Bus/coach bay/stand/stance within bus/coach station'), ('BCQ', 'Bus/coach bay'), ('BCT', 'On street bus/coach/tram stop'), ('TXR', 'Taxi rank (head of)'), ('STR', 'Shared taxi rank (head of)')], max_length=3)),
                ('bus_stop_type', models.CharField(blank=True, choices=[('MKD', 'Marked (pole, shelter etc)'), ('HAR', 'Hail and ride'), ('CUS', 'Custom (unmarked, or only marked on road)'), ('FLX', 'Flexible zone')], max_length=3)),
                ('timing_status', models.CharField(blank=True, choices=[('PPT', 'Principal point'), ('TIP', 'Time info point'), ('PTP', 'Principal and time info point'), ('OTH', 'Other bus stop')], max_length=3)),
                ('active', models.BooleanField(db_index=True)),
                ('osm', models.JSONField(blank=True, null=True)),
                ('admin_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.adminarea')),
                ('locality', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.locality')),
                ('places', models.ManyToManyField(blank=True, to='busstops.Place')),
                ('stop_area', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.stoparea')),
            ],
            options={
                'ordering': ('common_name', 'atco_code'),
            },
        ),
        migrations.CreateModel(
            name='StopUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(max_length=8)),
                ('order', models.PositiveIntegerField()),
                ('timing_status', models.CharField(choices=[('PPT', 'Principal point'), ('TIP', 'Time info point'), ('PTP', 'Principal and time info point'), ('OTH', 'Other bus stop')], max_length=3)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.service')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.stoppoint')),
            ],
            options={
                'ordering': ('direction', 'order'),
            },
        ),
        migrations.CreateModel(
            name='SIRISource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField()),
                ('requestor_ref', models.CharField(blank=True, max_length=255)),
                ('admin_areas', models.ManyToManyField(blank=True, to='busstops.AdminArea')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('how', models.CharField(choices=[('parallel', 'Combine timetables'), ('also', 'Just list')], max_length=10)),
                ('from_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_from', to='busstops.service')),
                ('to_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_to', to='busstops.service')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceColour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('foreground', models.CharField(blank=True, max_length=20)),
                ('background', models.CharField(blank=True, max_length=20)),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.operator')),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='colour',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.servicecolour'),
        ),
        migrations.AddField(
            model_name='service',
            name='operator',
            field=models.ManyToManyField(blank=True, to='busstops.Operator'),
        ),
        migrations.AddField(
            model_name='service',
            name='payment_methods',
            field=models.ManyToManyField(blank=True, to='busstops.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='service',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='busstops.region'),
        ),
        migrations.AddField(
            model_name='service',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.datasource'),
        ),
        migrations.AddField(
            model_name='service',
            name='stops',
            field=models.ManyToManyField(editable=False, through='busstops.StopUsage', to='busstops.StopPoint'),
        ),
        migrations.CreateModel(
            name='OperatorCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=100)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.operator')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.datasource')),
            ],
        ),
        migrations.AddField(
            model_name='operator',
            name='payment_methods',
            field=models.ManyToManyField(blank=True, to='busstops.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='operator',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.region'),
        ),
        migrations.AddField(
            model_name='adminarea',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.region'),
        ),
        migrations.CreateModel(
            name='StopCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.datasource')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.stoppoint')),
            ],
            options={
                'unique_together': {('code', 'source')},
            },
        ),
        migrations.CreateModel(
            name='ServiceCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.service')),
            ],
            options={
                'unique_together': {('service', 'scheme', 'code')},
            },
        ),
        migrations.AddIndex(
            model_name='service',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='busstops_se_search__b5811f_gin'),
        ),
        migrations.AlterUniqueTogether(
            name='place',
            unique_together={('source', 'code')},
        ),
        migrations.AlterUniqueTogether(
            name='operatorcode',
            unique_together={('operator', 'code', 'source')},
        ),
        migrations.AddIndex(
            model_name='operator',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='busstops_op_search__a0e028_gin'),
        ),
        migrations.AddIndex(
            model_name='locality',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='busstops_lo_search__e38767_gin'),
        ),
        migrations.RemoveField(
            model_name='servicecolour',
            name='operator',
        ),
        migrations.AddField(
            model_name='operator',
            name='colour',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.servicecolour'),
        ),
        migrations.AddField(
            model_name='operator',
            name='regions',
            field=models.ManyToManyField(blank=True, related_name='operators', to='busstops.Region'),
        ),
        migrations.AddField(
            model_name='operator',
            name='siblings',
            field=models.ManyToManyField(blank=True, related_name='_operator_siblings_+', to='busstops.Operator'),
        ),
        migrations.AddField(
            model_name='servicecolour',
            name='border',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AlterField(
            model_name='operator',
            name='parent',
            field=models.CharField(blank=True, db_index=True, max_length=48),
        ),
        migrations.AlterField(
            model_name='operator',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.region'),
        ),
        migrations.AlterField(
            model_name='stoppoint',
            name='bearing',
            field=models.CharField(blank=True, choices=[('N', 'north ↑'), ('NE', 'north-east ↗︎'), ('E', 'east →'), ('SE', 'south-east ↘︎'), ('S', 'south ↓'), ('SW', 'south-west ↙︎'), ('W', 'west ←'), ('NW', 'north-west ↖︎')], max_length=2),
        ),
        migrations.AlterField(
            model_name='service',
            name='service_code',
            field=models.CharField(blank=True, db_index=True, max_length=64),
        ),
        migrations.AlterModelOptions(
            name='service',
            options={'ordering': ['id']},
        ),
        migrations.AlterField(
            model_name='service',
            name='date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='service',
            name='public_use',
            field=models.BooleanField(null=True),
        ),
        migrations.AddField(
            model_name='datasource',
            name='sha1',
            field=models.CharField(blank=True, max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='servicecolour',
            name='name',
            field=models.CharField(blank=True, max_length=64),
        ),
        migrations.RemoveField(
            model_name='service',
            name='show_timetable',
        ),
        migrations.AlterField(
            model_name='stoppoint',
            name='naptan_code',
            field=models.CharField(blank=True, max_length=16),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(django.db.models.functions.text.Upper('line_name'), name='line_name'),
        ),
        migrations.AddIndex(
            model_name='stoppoint',
            index=models.Index(django.db.models.functions.text.Upper('naptan_code'), name='naptan_code'),
        ),
        migrations.AlterModelOptions(
            name='stopusage',
            options={'ordering': ('-direction', 'order')},
        ),
        migrations.RemoveField(
            model_name='stoppoint',
            name='osm',
        ),
    ]
