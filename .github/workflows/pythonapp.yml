name: Python application
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:

    - uses: actions/checkout@v3

    - id: cache-docker
      uses: actions/cache@v3
      with:
        path: /tmp/docker-save
        key: docker-save-${{ hashFiles('Dockerfile') }}-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          docker-save-${{ hashFiles('Dockerfile') }}
          docker-save-

    - run: docker load -i /tmp/docker-save/snapshot.tar || true

    - run: docker compose up -d

    - name: Run tests
      run: |
        docker compose exec web poetry run coverage run ./manage.py test -v3
        docker compose exec web poetry run coverage xml

    - run: |
        mkdir -p /tmp/docker-save \
          && docker save bustimesorg-web -o /tmp/docker-save/snapshot.tar \
          && ls -lh /tmp/docker-save
      if: steps.cache-docker.outputs.cache-hit != 'true'  # not an full exact match

    - uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)
