# Generated by Django 4.2.3 on 2023-07-09 09:20

import autoslug.fields
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.datetime
import django.db.models.functions.text
import simple_history.models
import uuid
import vehicles.models


class Migration(migrations.Migration):

    replaces = [('vehicles', '0001_squashed_0017_auto_20210930_2046'), ('vehicles', '0002_auto_20211002_2100'), ('vehicles', '0003_auto_20211029_1901'), ('vehicles', '0004_vehiclecode'), ('vehicles', '0005_auto_20211220_1221'), ('vehicles', '0006_vehiclerevisionfeature_vehicle_latest_journey_data_and_more'), ('vehicles', '0007_livery_updated_at_alter_livery_colours_and_more'), ('vehicles', '0008_livery_stroke_colour_alter_livery_colours_and_more'), ('vehicles', '0009_livery_published'), ('vehicles', '0010_remove_vehiclejourney_data_alter_livery_colours_and_more'), ('vehicles', '0011_vehicleedit_arbiter'), ('vehicles', '0012_historicallivery'), ('vehicles', '0013_vehiclejourney_block_alter_vehicle_latest_journey_and_more'), ('vehicles', '0014_alter_historicallivery_options_and_more'), ('vehicles', '0015_vehicle_slug'), ('vehicles', '0016_vehiclejourney_uuid'), ('vehicles', '0017_alter_vehicle_slug'), ('vehicles', '0018_remove_vehicle_vehicle_operator_and_code_and_more'), ('vehicles', '0019_remove_vehiclejourney_block'), ('vehicles', '0020_alter_vehiclefeature_options'), ('vehicles', '0021_historicallivery_locked_livery_locked_and_more'), ('vehicles', '0022_remove_historicallivery_operator_and_more'), ('vehicles', '0023_vehicleeditvote_for_revision_vehicletype_fuel_and_more'), ('vehicles', '0024_remove_vehicletype_coach_and_more')]

    initial = True

    dependencies = [
        ('busstops', '0004_alter_locality_parent_alter_place_parent_and_more'),
        ('busstops', '0007_service_public_use'),
        ('bustimes', '0006_auto_20210115_1956'),
        ('bustimes', '0004_auto_20201127_1220'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('busstops', '0014_alter_datasource_options'),
        ('bustimes', '0005_route_inbound_description_route_outbound_description_and_more'),
        ('busstops', '0001_squashed_0010_auto_20210930_1810'),
        ('bustimes', '0002_auto_20200930_1131'),
        ('busstops', '0006_auto_20201225_0004'),
        ('bustimes', '0002_route_route_line_name'),
        ('busstops', '0001_initial'),
        ('bustimes', '0011_routelink'),
    ]

    operations = [
        migrations.CreateModel(
            name='Livery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('colours', models.CharField(blank=True, max_length=255)),
                ('css', models.CharField(blank=True, max_length=255)),
                ('horizontal', models.BooleanField(default=False)),
                ('angle', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'liveries',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('fleet_number', models.PositiveIntegerField(blank=True, null=True)),
                ('fleet_code', models.CharField(blank=True, max_length=24)),
                ('reg', models.CharField(blank=True, max_length=24)),
                ('colours', models.CharField(blank=True, max_length=255)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('branding', models.CharField(blank=True, max_length=255)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('withdrawn', models.BooleanField(default=False)),
                ('data', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleEdit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fleet_number', models.CharField(blank=True, max_length=24)),
                ('reg', models.CharField(blank=True, max_length=24)),
                ('vehicle_type', models.CharField(blank=True, max_length=255)),
                ('colours', models.CharField(blank=True, max_length=255)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('branding', models.CharField(blank=True, max_length=255)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('withdrawn', models.BooleanField(null=True)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('url', models.URLField(blank=True, max_length=255)),
                ('approved', models.BooleanField(db_index=True, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleJourney',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('route_name', models.CharField(blank=True, max_length=64)),
                ('code', models.CharField(blank=True, max_length=255)),
                ('destination', models.CharField(blank=True, max_length=255)),
                ('direction', models.CharField(blank=True, max_length=8)),
                ('data', models.JSONField(blank=True, null=True)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.service')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.datasource')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicle')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('double_decker', models.BooleanField(null=True)),
                ('coach', models.BooleanField(null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='VehicleRevision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('changes', models.JSONField(blank=True, null=True)),
                ('message', models.TextField(blank=True)),
                ('username', models.CharField(blank=True, max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('from_operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='revision_from', to='busstops.operator')),
                ('to_operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='revision_to', to='busstops.operator')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('latlong', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('heading', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('early', models.SmallIntegerField(blank=True, null=True)),
                ('delay', models.SmallIntegerField(blank=True, null=True)),
                ('current', models.BooleanField(default=False)),
                ('journey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehiclejourney')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='VehicleEditFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add', models.BooleanField(default=True)),
                ('edit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicleedit')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehiclefeature')),
            ],
        ),
        migrations.AddField(
            model_name='vehicleedit',
            name='features',
            field=models.ManyToManyField(blank=True, through='vehicles.VehicleEditFeature', to='vehicles.vehiclefeature'),
        ),
        migrations.AddField(
            model_name='vehicleedit',
            name='livery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vehicles.livery'),
        ),
        migrations.AddField(
            model_name='vehicleedit',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicle'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='features',
            field=models.ManyToManyField(blank=True, to='vehicles.vehiclefeature'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='latest_location',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='latest_vehicle', to='vehicles.vehiclelocation'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='livery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vehicles.livery'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.operator'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='busstops.datasource'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vehicles.vehicletype'),
        ),
        migrations.CreateModel(
            name='JourneyCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=64)),
                ('destination', models.CharField(blank=True, max_length=255)),
                ('data_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.datasource')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.service')),
                ('siri_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.sirisource')),
            ],
        ),
        migrations.CreateModel(
            name='Call',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_number', models.PositiveSmallIntegerField()),
                ('aimed_arrival_time', models.DateTimeField(null=True)),
                ('expected_arrival_time', models.DateTimeField(null=True)),
                ('aimed_departure_time', models.DateTimeField(null=True)),
                ('expected_departure_time', models.DateTimeField(null=True)),
                ('journey', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehiclejourney')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.stoppoint')),
            ],
        ),
        migrations.AddIndex(
            model_name='vehiclelocation',
            index=models.Index(condition=models.Q(('current', True)), fields=['datetime'], name='datetime'),
        ),
        migrations.AddIndex(
            model_name='vehiclelocation',
            index=models.Index(condition=models.Q(('current', True)), fields=['datetime', 'latlong'], name='datetime_latlong'),
        ),
        migrations.AlterUniqueTogether(
            name='vehiclejourney',
            unique_together={('vehicle', 'datetime')},
        ),
        migrations.AlterIndexTogether(
            name='vehiclejourney',
            index_together={('service', 'datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='vehicle',
            unique_together={('code', 'operator')},
        ),
        migrations.AlterUniqueTogether(
            name='journeycode',
            unique_together={('code', 'service', 'data_source'), ('code', 'service', 'siri_source')},
        ),
        migrations.AddField(
            model_name='vehicleedit',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='vehiclerevision',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='vehiclejourney',
            name='trip',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bustimes.trip'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='fleet_code',
            field=models.CharField(blank=True, db_index=True, max_length=24),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='reg',
            field=models.CharField(blank=True, db_index=True, max_length=24),
        ),
        migrations.RemoveField(
            model_name='vehicleedit',
            name='ip_address',
        ),
        migrations.RemoveField(
            model_name='vehicleedit',
            name='username',
        ),
        migrations.RemoveField(
            model_name='vehiclerevision',
            name='ip_address',
        ),
        migrations.RemoveField(
            model_name='vehiclerevision',
            name='username',
        ),
        migrations.AddField(
            model_name='livery',
            name='left_css',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='livery',
            name='right_css',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='livery',
            name='white_text',
            field=models.BooleanField(default=False),
        ),
        migrations.DeleteModel(
            name='Call',
        ),
        migrations.AddField(
            model_name='vehiclerevision',
            name='from_livery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='revision_from', to='vehicles.livery'),
        ),
        migrations.AddField(
            model_name='vehiclerevision',
            name='from_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='revision_from', to='vehicles.vehicletype'),
        ),
        migrations.AddField(
            model_name='vehiclerevision',
            name='to_livery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='revision_to', to='vehicles.livery'),
        ),
        migrations.AddField(
            model_name='vehiclerevision',
            name='to_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='revision_to', to='vehicles.vehicletype'),
        ),
        migrations.AddField(
            model_name='vehiclelocation',
            name='occupancy',
            field=models.CharField(blank=True, choices=[('seatsAvailable', 'Seats available'), ('standingAvailable', 'Standing available'), ('full', 'Full')], max_length=17),
        ),
        migrations.AddField(
            model_name='vehicletype',
            name='electric',
            field=models.BooleanField(null=True),
        ),
        migrations.AddField(
            model_name='livery',
            name='text_colour',
            field=models.CharField(blank=True, max_length=7),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='latest_location',
            field=models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vehicles.vehiclelocation'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.datasource'),
        ),
        migrations.RemoveIndex(
            model_name='vehiclelocation',
            name='datetime',
        ),
        migrations.RemoveIndex(
            model_name='vehiclelocation',
            name='datetime_latlong',
        ),
        migrations.AddField(
            model_name='vehiclelocation',
            name='occupancy_thresholds',
            field=models.CharField(blank=True, max_length=10),
        ),
        migrations.AddField(
            model_name='vehiclelocation',
            name='seated_capacity',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='vehiclelocation',
            name='seated_occupancy',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='vehiclelocation',
            name='wheelchair_capacity',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='vehiclelocation',
            name='wheelchair_occupancy',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='garage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bustimes.garage'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='latest_journey',
            field=models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='latest_vehicle', to='vehicles.vehiclejourney'),
        ),
        migrations.AlterIndexTogether(
            name='vehiclejourney',
            index_together=set(),
        ),
        migrations.AddIndex(
            model_name='vehiclejourney',
            index=models.Index(models.F('service'), models.OrderBy(django.db.models.functions.datetime.TruncDate('datetime')), name='service_datetime_date'),
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='from_livery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='revision_from', to='vehicles.livery'),
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='from_operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='revision_from', to='busstops.operator'),
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='from_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='revision_from', to='vehicles.vehicletype'),
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='to_livery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='revision_to', to='vehicles.livery'),
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='to_operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='revision_to', to='busstops.operator'),
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='to_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='revision_to', to='vehicles.vehicletype'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='fleet_code',
            field=models.CharField(blank=True, max_length=24),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='reg',
            field=models.CharField(blank=True, max_length=24),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(django.db.models.functions.text.Upper('fleet_code'), name='fleet_code'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(django.db.models.functions.text.Upper('reg'), name='reg'),
        ),
        migrations.AlterField(
            model_name='vehiclejourney',
            name='trip',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bustimes.trip'),
        ),
        migrations.AddField(
            model_name='livery',
            name='operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.operator'),
        ),
        migrations.AddField(
            model_name='vehicleedit',
            name='score',
            field=models.SmallIntegerField(default=0),
        ),
        migrations.CreateModel(
            name='VehicleEditVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positive', models.BooleanField()),
                ('by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('for_edit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicleedit')),
            ],
            options={
                'unique_together': {('by_user', 'for_edit')},
            },
        ),
        migrations.AlterField(
            model_name='vehiclejourney',
            name='trip',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bustimes.trip'),
        ),
        migrations.AddIndex(
            model_name='vehiclejourney',
            index=models.Index(models.F('vehicle'), models.OrderBy(django.db.models.functions.datetime.TruncDate('datetime')), name='vehicle_datetime_date'),
        ),
        migrations.CreateModel(
            name='VehicleCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=24)),
                ('scheme', models.CharField(max_length=24)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicle')),
            ],
            options={
                'index_together': {('code', 'scheme')},
            },
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='latest_location',
        ),
        migrations.DeleteModel(
            name='VehicleLocation',
        ),
        migrations.CreateModel(
            name='VehicleRevisionFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add', models.BooleanField(default=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehiclefeature')),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='latest_journey_data',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='vehiclerevision',
            name='features',
            field=models.ManyToManyField(blank=True, through='vehicles.VehicleRevisionFeature', to='vehicles.vehiclefeature'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='branding',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='notes',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='vehiclerevisionfeature',
            name='revision',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehiclerevision'),
        ),
        migrations.AddField(
            model_name='livery',
            name='updated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='livery',
            name='colours',
            field=models.CharField(blank=True, help_text="Keep it simple. Being able to read the route number on the map the is much more important than 'accuracy'", max_length=255),
        ),
        migrations.AlterField(
            model_name='livery',
            name='css',
            field=models.CharField(blank=True, help_text='Most liveries can be adequately represented with a list of colours and an angle,\nin which case you should leave this blank', max_length=255, verbose_name='CSS'),
        ),
        migrations.AlterField(
            model_name='livery',
            name='horizontal',
            field=models.BooleanField(default=False, help_text='Equivalent to setting the angle to 90'),
        ),
        migrations.AlterField(
            model_name='livery',
            name='left_css',
            field=models.CharField(blank=True, help_text='Automatically generated from colours and angle if CSS field is blank', max_length=255, verbose_name='Left CSS'),
        ),
        migrations.AlterField(
            model_name='livery',
            name='right_css',
            field=models.CharField(blank=True, help_text='Automatically generated colours and angle if CSS field is blank', max_length=255, verbose_name='Right CSS'),
        ),
        migrations.AlterField(
            model_name='livery',
            name='text_colour',
            field=models.CharField(blank=True, editable=False, max_length=7),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='branding',
            field=models.CharField(blank=True, default='', max_length=255),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='name',
            field=models.CharField(blank=True, default='', max_length=255),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='notes',
            field=models.CharField(blank=True, default='', max_length=255),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='from_livery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revision_from', to='vehicles.livery'),
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='from_operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revision_from', to='busstops.operator'),
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='from_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revision_from', to='vehicles.vehicletype'),
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='to_livery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revision_to', to='vehicles.livery'),
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='to_operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revision_to', to='busstops.operator'),
        ),
        migrations.AlterField(
            model_name='vehiclerevision',
            name='to_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revision_to', to='vehicles.vehicletype'),
        ),
        migrations.AlterField(
            model_name='livery',
            name='colours',
            field=models.CharField(blank=True, help_text="Keep it simple. Being able to read the route number on the map the is much more important than 'accuracy'", max_length=512),
        ),
        migrations.AlterField(
            model_name='livery',
            name='css',
            field=models.CharField(blank=True, help_text='Most liveries can be adequately represented with a list of colours and an angle,\nin which case you should leave this blank', max_length=1024, verbose_name='CSS'),
        ),
        migrations.AlterField(
            model_name='livery',
            name='left_css',
            field=models.CharField(blank=True, help_text='Automatically generated from colours and angle if CSS field is blank', max_length=1024, verbose_name='Left CSS'),
        ),
        migrations.AlterField(
            model_name='livery',
            name='right_css',
            field=models.CharField(blank=True, help_text='Automatically generated colours and angle if CSS field is blank', max_length=1024, verbose_name='Right CSS'),
        ),
        migrations.AddField(
            model_name='livery',
            name='published',
            field=models.BooleanField(default=True, help_text='Tick to include in the CSS and be able to apply this livery to vehicles'),
            preserve_default=False,
        ),
        migrations.RemoveField(
            model_name='vehiclejourney',
            name='data',
        ),
        migrations.AlterField(
            model_name='livery',
            name='colours',
            field=models.CharField(blank=True, help_text="Keep it simple.\nSimplicity (and being able to read the route number on the map) is much more important than 'accuracy'.", max_length=512),
        ),
        migrations.AlterField(
            model_name='livery',
            name='css',
            field=models.CharField(blank=True, help_text='Leave this blank.\nA livery can be adequately represented with a list of colours and an angle.', max_length=1024, verbose_name='CSS'),
        ),
        migrations.AlterField(
            model_name='livery',
            name='left_css',
            field=models.CharField(blank=True, help_text='Automatically generated from colours and angle', max_length=1024, verbose_name='Left CSS'),
        ),
        migrations.AlterField(
            model_name='livery',
            name='operator',
            field=models.ForeignKey(blank=True, help_text="A livery may be assigned to vehicles from more than one operator.\nYou can use this field to make this livery selectable for a new operator – that's its only purpose", null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.operator'),
        ),
        migrations.AlterField(
            model_name='livery',
            name='right_css',
            field=models.CharField(blank=True, help_text='Automatically generated from colours and angle', max_length=1024, verbose_name='Right CSS'),
        ),
        migrations.AddField(
            model_name='livery',
            name='stroke_colour',
            field=models.CharField(blank=True, max_length=7),
        ),
        migrations.AlterField(
            model_name='livery',
            name='text_colour',
            field=models.CharField(blank=True, max_length=7),
        ),
        migrations.AddField(
            model_name='vehicleedit',
            name='arbiter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='arbited', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='HistoricalLivery',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('colours', models.CharField(blank=True, help_text="Keep it simple.\nSimplicity (and being able to read the route number on the map) is much more important than 'accuracy'.", max_length=512)),
                ('css', models.CharField(blank=True, help_text='Leave this blank.\nA livery can be adequately represented with a list of colours and an angle.', max_length=1024, verbose_name='CSS')),
                ('left_css', models.CharField(blank=True, help_text='Automatically generated from colours and angle', max_length=1024, verbose_name='Left CSS')),
                ('right_css', models.CharField(blank=True, help_text='Automatically generated from colours and angle', max_length=1024, verbose_name='Right CSS')),
                ('white_text', models.BooleanField(default=False)),
                ('text_colour', models.CharField(blank=True, max_length=7)),
                ('stroke_colour', models.CharField(blank=True, max_length=7)),
                ('horizontal', models.BooleanField(default=False, help_text='Equivalent to setting the angle to 90')),
                ('angle', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('published', models.BooleanField(help_text='Tick to include in the CSS and be able to apply this livery to vehicles')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('operator', models.ForeignKey(blank=True, db_constraint=False, help_text="A livery may be assigned to vehicles from more than one operator.\nYou can use this field to make this livery selectable for a new operator – that's its only purpose", null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='busstops.operator')),
            ],
            options={
                'verbose_name': 'historical livery',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
                'verbose_name_plural': 'historical liveries',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='vehiclejourney',
            name='block',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bustimes.block'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='latest_journey',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='latest_vehicle', to='vehicles.vehiclejourney'),
        ),
        migrations.DeleteModel(
            name='JourneyCode',
        ),
        migrations.AlterUniqueTogether(
            name='vehicle',
            unique_together=set(),
        ),
        migrations.AddConstraint(
            model_name='vehicle',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Upper('code'), django.db.models.functions.text.Upper('operator'), name='vehicle_operator_and_code'),
        ),
        migrations.AddField(
            model_name='vehiclejourney',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='slug',
            field=autoslug.fields.AutoSlugField(default='', editable=True, populate_from=vehicles.models.vehicle_slug, unique=True),
        ),
        migrations.RemoveConstraint(
            model_name='vehicle',
            name='vehicle_operator_and_code',
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['operator', 'withdrawn'], name='operator_withdrawn'),
        ),
        migrations.AddConstraint(
            model_name='vehicle',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Upper('code'), models.F('operator'), name='vehicle_operator_and_code'),
        ),
        migrations.RemoveField(
            model_name='vehiclejourney',
            name='block',
        ),
        migrations.AlterModelOptions(
            name='vehiclefeature',
            options={'ordering': ('name',)},
        ),
        migrations.AddField(
            model_name='historicallivery',
            name='locked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='livery',
            name='locked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='livery',
            name='operators',
            field=models.ManyToManyField(blank=True, related_name='liveries', to='busstops.operator'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='locked',
            field=models.BooleanField(default=False),
        ),
        migrations.RemoveField(
            model_name='historicallivery',
            name='operator',
        ),
        migrations.RemoveField(
            model_name='livery',
            name='operator',
        ),
        migrations.AddField(
            model_name='vehicleeditvote',
            name='for_revision',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehiclerevision'),
        ),
        migrations.AddField(
            model_name='vehicletype',
            name='fuel',
            field=models.CharField(blank=True, choices=[('diesel', 'diesel'), ('electric', 'electric'), ('hybrid', 'hybrid'), ('hydrogen', 'hydrogen'), ('gas', 'gas')], max_length=8),
        ),
        migrations.AddField(
            model_name='vehicletype',
            name='style',
            field=models.CharField(blank=True, choices=[('double decker', 'double decker'), ('minibus', 'minibus'), ('coach', 'coach'), ('articulated', 'articulated'), ('train', 'train'), ('tram', 'tram')], max_length=13),
        ),
        migrations.AlterField(
            model_name='vehiclecode',
            name='code',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='vehicleeditvote',
            name='for_edit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicleedit'),
        ),
        migrations.RemoveField(
            model_name='vehicletype',
            name='coach',
        ),
        migrations.RemoveField(
            model_name='vehicletype',
            name='double_decker',
        ),
        migrations.RemoveField(
            model_name='vehicletype',
            name='electric',
        ),
        migrations.AddField(
            model_name='historicallivery',
            name='colour',
            field=models.CharField(default='', help_text='For the most simplified version of the livery', max_length=7),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='livery',
            name='colour',
            field=models.CharField(default='', help_text='For the most simplified version of the livery', max_length=7),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='historicallivery',
            name='stroke_colour',
            field=models.CharField(blank=True, help_text='Use sparingly, often looks shit', max_length=7),
        ),
        migrations.AlterField(
            model_name='livery',
            name='stroke_colour',
            field=models.CharField(blank=True, help_text='Use sparingly, often looks shit', max_length=7),
        ),
    ]
